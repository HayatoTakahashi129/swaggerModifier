openapi: 3.0.1
x-stoplight:
  id: u5r61hsdu0tsj
info:
  title: todoDemo
  version: "1.0"
  description: |-
    This is a sample todo listing project.
    We can create, edit, delete the todos across all platform including pc and smartphone.
    this project has authentications so, you can share toso list all your devices.
  contact:
    name: Hayato Takahashi
    email: hayato.012995@gmail.com
servers:
  - url: "http://localhost:3000"
paths:
  /todos:
    get:
      summary: Get todo list
      tags:
        - Todo
      responses:
        "200":
          description: Succed to get todo list.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Id"
                    - $ref: "#/components/schemas/Todo"
              examples:
                example-1:
                  value:
                    - id: "16592316588600418692584385336235"
                      dueDate: "2022-07-07T03:00:00+09:00"
                      description: time test
                      title: test2
                    - id: "16592320719279718974216523989824"
                      dueDate: "2022-07-07T03:00:00+09:00"
                      description: time test2
                      title: test2
                    - id: "16600554483124698284404752367598"
                      dueDate: "2023-01-14T03:00:00+09:00"
                      description: ""
                      title: sample empty description
        "401":
          $ref: "#/components/responses/Token-Expired-Response"
        "500":
          $ref: "#/components/responses/System-Error-Response"
      operationId: get-todos
      description: Get todo lists generated by user.
      security:
        - ID-Token: []
  /todo/add:
    post:
      summary: Create new Todo.
      operationId: post-todo-add
      responses:
        "200":
          description: Todo created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
              examples:
                example-1:
                  value:
                    message: add new Todo completedly.
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/400ErrorType"
                  - $ref: "#/components/schemas/Message"
                  - type: object
                    properties:
                      fields:
                        type: object
                        properties:
                          title:
                            type: string
                            example: title is required.
                          dueDate:
                            type: string
                            example: dueDate is required.
                          description:
                            type: string
                            example: description is required.
              examples:
                title is over 128 charcters.:
                  value:
                    type: VALIDATION_ERROR
                    message: string
                    fields:
                      title: title is need to be lower than 128.
        "401":
          $ref: "#/components/responses/Token-Expired-Response"
        "500":
          $ref: "#/components/responses/System-Error-Response"
      description: Create a new todo.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Todo"
        description: Post the necessary fields for the API to create a new todo.
      tags:
        - Todo
      security:
        - ID-Token: []
components:
  schemas:
    Todo:
      title: Todo
      type: object
      description: Basic todo model
      x-examples: {}
      properties:
        title:
          type: string
          example: sample title
          minLength: 1
          maxLength: 128
        dueDate:
          type: string
          format: date-time
          example: "2022-07-07T03:00:00+09:00"
        description:
          type: string
          example: "this is sample description. "
          minLength: 0
          maxLength: 1024
      required:
        - title
        - dueDate
    Message:
      title: Message
      x-stoplight:
        id: eylve8mfguv0x
      type: object
      description: this is common response object for message.
      properties:
        message:
          type: string
      required:
        - message
    Id:
      title: Id
      x-stoplight:
        id: hpf9bbbrwfmjm
      type: object
      description: this is common Id key for this project.
      properties:
        id:
          type: string
          example: "16592316588600418692584385336523"
          minLength: 32
          maxLength: 32
          pattern: "[0-9]+"
      required:
        - id
    400ErrorType:
      title: 400-Error-Type
      x-stoplight:
        id: bn5wwmit3lagt
      type: object
      description: |-
        This is common response object when 400 error is happen.
        This key shows what kind of error happened in back end server.
      properties:
        type:
          type: string
          enum:
            - VALIDATION_ERROR
            - BUISINESS_ERROR
      required:
        - type
  securitySchemes:
    ID-Token:
      name: Authorization
      type: apiKey
      in: header
      description: Id token provided by cognito.
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - "arn:aws:cognito-idp:ap-northeast-1:276161490400:userpool/ap-northeast-1_EICVnWjIy"
        identityValidationExpression: .*
  responses:
    System-Error-Response:
      description: This is common response when internal server error is happen
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
          examples:
            Ssytem Error happen:
              value:
                message: Something went wrong
    Token-Expired-Response:
      description: Example response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Message"
          examples:
            example-1:
              value:
                message: Unauthorized.
security:
  - ID-Token: []
